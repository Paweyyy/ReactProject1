{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Documents/Udacity/React/Projekt1/starter/src/components/booklist.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport Bookshelf from \"./bookshelf\";\nimport { useState, useEffect } from \"react\";\nimport { getAll, update } from '../BooksAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookList = () => {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  const [updt, setUpdate] = useState(true);\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await getAll();\n      setBooks(res);\n    };\n\n    if (update) {\n      getBooks();\n      setUpdate(false);\n      console.log(\"update\");\n    }\n  }, [updt]);\n\n  const moveBook = async (key, value) => {\n    console.log(key, value);\n    const res = await update(key, value);\n    setUpdate(true);\n    /*let booksCopy = []\n    Object.keys(res).map(key => {\n        res[key].map(bookId => {\n            let book = books.filter(book => book.id === bookId)[0]\n            book.shelf = key\n            booksCopy = [...booksCopy, book]\n        })\n    })\n    console.log(booksCopy)\n    setBooks(booksCopy)*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MyReads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Bookshelf, {\n            title: \"Currently Reading\",\n            shelf: \"currentlyReading\",\n            books: books,\n            moveBook: moveBook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bookshelf, {\n            title: \"Read\",\n            books: books.filter(book => book.shelf === \"read\"),\n            moveBook: moveBook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bookshelf, {\n            title: \"Want to Read\",\n            books: books.filter(book => book.shelf === \"wantToRead\"),\n            moveBook: moveBook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/search\",\n          children: \"Add a book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookList, \"tPbq5xvrvtMHNuL9q+S60+hmv/M=\");\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["/Users/paul/Documents/Udacity/React/Projekt1/starter/src/components/booklist.js"],"names":["Link","Bookshelf","useState","useEffect","getAll","update","BookList","books","setBooks","updt","setUpdate","getBooks","res","console","log","moveBook","key","value","filter","book","shelf"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,aAA/B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,IAAD,EAAOC,SAAP,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,QAAQ,GAAG,YAAY;AACzB,YAAMC,GAAG,GAAG,MAAMR,MAAM,EAAxB;AACAI,MAAAA,QAAQ,CAACI,GAAD,CAAR;AACH,KAHD;;AAIA,QAAGP,MAAH,EAAU;AACNM,MAAAA,QAAQ;AACRD,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;AACJ,GAVQ,EAUN,CAACL,IAAD,CAVM,CAAT;;AAYA,QAAMM,QAAQ,GAAG,OAAOC,GAAP,EAAYC,KAAZ,KAAsB;AACnCJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ,EAAiBC,KAAjB;AACA,UAAML,GAAG,GAAG,MAAMP,MAAM,CAACW,GAAD,EAAMC,KAAN,CAAxB;AACAP,IAAAA,SAAS,CAAC,IAAD,CAAT;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK,GAdD;;AAgBA,sBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACI;AAAA,kCACA,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,mBAAjB;AAAqC,YAAA,KAAK,EAAC,kBAA3C;AAA8D,YAAA,KAAK,EAAEH,KAArE;AAA4E,YAAA,QAAQ,EAAEQ;AAAtF;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,MAAjB;AAAwB,YAAA,KAAK,EAAER,KAAK,CAACW,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAe,MAApC,CAA/B;AAA4E,YAAA,QAAQ,EAAEL;AAAtF;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,cAAjB;AAAgC,YAAA,KAAK,EAAER,KAAK,CAACW,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAe,YAApC,CAAvC;AAA0F,YAAA,QAAQ,EAAEL;AAApG;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJA,eAWA;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAmBH,CAnDD;;GAAMT,Q;;KAAAA,Q;AAqDN,eAAeA,QAAf","sourcesContent":["import { Link } from \"react-router-dom\";\nimport Bookshelf from \"./bookshelf\";\nimport { useState, useEffect } from \"react\";\nimport { getAll, update } from '../BooksAPI';\n\nconst BookList = () => {\n    const [books, setBooks] = useState([])\n    const [updt, setUpdate] = useState(true)\n\n    useEffect(() => {\n        const getBooks = async () => {\n            const res = await getAll();\n            setBooks(res);\n        }\n        if(update){\n            getBooks()\n            setUpdate(false)\n            console.log(\"update\")\n        }\n    }, [updt])\n\n    const moveBook = async (key, value) => {\n        console.log(key, value)\n        const res = await update(key, value)\n        setUpdate(true)\n        /*let booksCopy = []\n        Object.keys(res).map(key => {\n            res[key].map(bookId => {\n                let book = books.filter(book => book.id === bookId)[0]\n                book.shelf = key\n                booksCopy = [...booksCopy, book]\n            })\n        })\n        console.log(booksCopy)\n        setBooks(booksCopy)*/\n    }\n\n    return(\n    <div className=\"app\">\n        <div className=\"list-books\">\n        <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n        </div>\n        <div className=\"list-books-content\">\n            <div>\n            <Bookshelf title=\"Currently Reading\" shelf=\"currentlyReading\" books={books} moveBook={moveBook}/>\n            <Bookshelf title=\"Read\" books={books.filter(book => book.shelf === \"read\")} moveBook={moveBook}/>\n            <Bookshelf title=\"Want to Read\" books={books.filter(book => book.shelf === \"wantToRead\")} moveBook={moveBook}/>\n            </div>\n        </div>\n        <div className=\"open-search\">\n            <Link to=\"/search\">Add a book</Link>\n        </div>\n        </div>\n    </div>\n    )\n}\n\nexport default BookList;"]},"metadata":{},"sourceType":"module"}