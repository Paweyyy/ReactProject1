{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Documents/Udacity/React/Projekt1/starter/src/components/booklist.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport Bookshelf from \"./bookshelf\";\nimport { useState, useEffect } from \"react\";\nimport { getAll, update } from '../BooksAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookList = () => {\n  _s();\n\n  const [currentlyReading, setCurrentlyReading] = useState([]);\n  const [wantToRead, setWantToRead] = useState([]);\n  const [read, setRead] = useState([]);\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await getAll();\n      setBooks(books);\n    };\n\n    getBooks();\n  }, []);\n\n  const moveBook = (key, value) => {\n    console.log(key, value);\n    const res = update(key, value);\n    console.log(res);\n\n    if (value === 'currentlyReading') {} else if (value === 'wantToRead') {} else if (value === 'read') {}\n\n    if (value === 'currentlyReading') {} else if (value === 'wantToRead') {} else if (value === 'read') {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MyReads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Bookshelf, {\n            title: \"Currently Reading\",\n            books: books.filter(book => book.shelf === \"currentlyReading\"),\n            moveBook: moveBook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bookshelf, {\n            title: \"Read\",\n            books: books.filter(book => book.shelf === \"wantToRead\"),\n            moveBook: moveBook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bookshelf, {\n            title: \"Want to Read\",\n            books: books.filter(book => book.shelf === \"read\"),\n            moveBook: moveBook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/search\",\n          children: \"Add a book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookList, \"YaNwzx1LyeAlWFDCS2t1OQg2lPo=\");\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["/Users/paul/Documents/Udacity/React/Projekt1/starter/src/components/booklist.js"],"names":["Link","Bookshelf","useState","useEffect","getAll","update","BookList","currentlyReading","setCurrentlyReading","wantToRead","setWantToRead","read","setRead","getBooks","res","setBooks","books","moveBook","key","value","console","log","filter","book","shelf"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\nimport Bookshelf from \"./bookshelf\";\nimport { useState, useEffect } from \"react\";\nimport { getAll, update } from '../BooksAPI';\n\nconst BookList = () => {\n    const [currentlyReading, setCurrentlyReading] = useState([])\n    const [wantToRead, setWantToRead] = useState([])\n    const [read, setRead] = useState([])\n\n    useEffect(() => {\n        const getBooks = async () => {\n            const res = await getAll();\n            setBooks(books)\n        }\n        getBooks()\n    }, [])\n\n    const moveBook = (key, value) => {\n        console.log(key, value)\n        const res = update(key, value)\n        console.log(res)\n        if(value === 'currentlyReading'){\n            \n        }else if(value === 'wantToRead'){\n\n        }else if(value === 'read'){\n\n        }\n        if(value === 'currentlyReading'){\n            \n        }else if(value === 'wantToRead'){\n\n        }else if(value === 'read'){\n\n        }\n    }\n\n    return(\n    <div className=\"app\">\n        <div className=\"list-books\">\n        <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n        </div>\n        <div className=\"list-books-content\">\n            <div>\n            <Bookshelf title=\"Currently Reading\" books={books.filter(book => book.shelf === \"currentlyReading\")} moveBook={moveBook}/>\n            <Bookshelf title=\"Read\" books={books.filter(book => book.shelf === \"wantToRead\")} moveBook={moveBook}/>\n            <Bookshelf title=\"Want to Read\" books={books.filter(book => book.shelf === \"read\")} moveBook={moveBook}/>\n            </div>\n        </div>\n        <div className=\"open-search\">\n            <Link to=\"/search\">Add a book</Link>\n        </div>\n        </div>\n    </div>\n    )\n}\n\nexport default BookList;"]},"metadata":{},"sourceType":"module"}